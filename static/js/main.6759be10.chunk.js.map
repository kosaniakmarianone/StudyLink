{"version":3,"sources":["images/program.jpg","components/Header.js","components/Home.js","components/Admin.js","components/SignIn.js","components/Landing.js","components/Temes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Component","Home","state","loaded","username","userInfo","temesOpen","debt","dbinfo","schoolRef","firebase","ref","child","user","JSON","parse","localStorage","getItem","console","log","on","snap","val","setState","map","item","school","groups","name","group","pupils","temes_open","temesPass","temes_pass","debtInfo","this","Math","ceil","Admin","schools","key","align","breakpoint","ListGroup","horizontal","Item","password","SignIn","props","login","phone","groupSeleced","schoolChuse","groupSelect","bind","schoolSelect","onSubmit","onPhoneChange","onPasswordChange","allSchools","push","e","allGroups","target","value","preventDefault","setItem","stringify","window","location","hash","faillogin","Alert","setTimeout","Form","Group","controlId","Label","Control","as","onChange","type","placeholder","Button","Landing","src","program","Temes","temes","rootRef","temesRef","length","pop","Accordion","defaultActiveKey","Card","tema","eventKey","Body","task","materials","video","App","basename","path","component","exact","Boolean","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6759be10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/program.09ba2146.jpg\";","import React, {Component} from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#/landing\">StudyLink</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#/home\">Головна</Nav.Link>\r\n                        <Nav.Link href=\"#/temes\">Навання</Nav.Link>\r\n                    </Nav>\r\n\r\n                    <Nav>\r\n                        <Nav.Link href=\"#/SignIn\">Увійти</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport * as firebase from 'firebase';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: null,\r\n            username: '',\r\n            userInfo: '',\r\n            temesOpen: null,\r\n            debt: null\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        console.log(user)\r\n        let dbinfo;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val()\r\n            this.setState({\r\n                userInfo: dbinfo,\r\n                loaded: true\r\n            })\r\n            this.state.userInfo.map(item=>{\r\n                if(item.school === user.school){\r\n                    console.log('school right')\r\n                    item.groups.map(item=>{\r\n                        if(item.name === user.group){\r\n                            console.log(item)\r\n                            item.pupils.map(item=>{\r\n                                if(item.name === user.name){\r\n                                    //чи є борг\r\n                                    this.setState({\r\n                                        debt: item.debt\r\n                                    })\r\n                                }\r\n                            })\r\n                            //інфа про кількість тем відкритих і відвіданих занять\r\n                            this.setState({\r\n                                username: user.name,\r\n                                temesOpen:  item.temes_open,\r\n                                temesPass:  item.temes_pass\r\n                            })\r\n                        }\r\n                    })\r\n                    \r\n                }\r\n            })\r\n        })\r\n        \r\n    }\r\n    render() {\r\n        let debtInfo;\r\n        if(this.state.debt !== ''){\r\n            debtInfo = <div>Увага у вас є борг {this.state.debt}грн</div>\r\n        }\r\n        if(this.state.debt === ''){\r\n            debtInfo = <div></div>\r\n        }\r\n        if(!this.state.loaded){\r\n            return <div>Loading...</div>\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h1>Hello {this.state.username}</h1>\r\n                    <h3>Відвідано {this.state.temesPass} занять</h3>\r\n                    <h3>Оплачено {Math.ceil(this.state.temesPass/4)*4} занять</h3>\r\n                    <h3>Наступна оплата через {Math.ceil(this.state.temesPass/4)*4 - this.state.temesPass} заняття</h3>\r\n                    {debtInfo}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Home;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport AdminStyle from '../componentsStyle/AdminStyle.css';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nclass Admin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            schools: null\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            this.setState({\r\n                schools: dbinfo,\r\n                loaded: true\r\n            })\r\n        })\r\n        \r\n    }\r\n    render() {\r\n        if(!this.state.loaded){\r\n            return <div>Loading...</div>\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h1 className='ff-c'>Усі школи і гупи</h1>\r\n                    {console.log(this.state.schools)}\r\n                    {\r\n                    this.state.schools.map(item =>(\r\n                    <div key={item.school}>\r\n                        <h1 className='blue ff-c'>{item.school}</h1>\r\n                        <div>\r\n                            {item.groups.map(item =>(\r\n                                <div key={item.name}>\r\n                                    <h3 align='left' className='gray ff-c ml-30 mt-20'>{item.name}</h3>\r\n                                    {item.pupils.map(breakpoint => (\r\n                                        <ListGroup horizontal key={breakpoint.name}>\r\n                                            <ListGroup.Item className='width-250'>{breakpoint.name}</ListGroup.Item>\r\n                                            <ListGroup.Item className='width-250'>{breakpoint.password}</ListGroup.Item>\r\n                                            <ListGroup.Item className='width-100'>{breakpoint.debt}</ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    ))}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    ))\r\n                    }\r\n                    \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Admin;","import React, {Component} from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as firebase from 'firebase';\r\n\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: null,\r\n            phone: '',\r\n            password: '',\r\n            schools: [],\r\n            groups: [],\r\n            school: '',\r\n            groupSeleced: '',\r\n            schoolChuse: false\r\n        }\r\n        this.groupSelect = this.groupSelect.bind(this);\r\n        this.schoolSelect = this.schoolSelect.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onPhoneChange = this.onPhoneChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let groups;\r\n        let allSchools=[];\r\n        schoolRef.on('value', snap => {\r\n            groups = snap.val();\r\n            groups.map(item => {\r\n                allSchools.push(item.school)\r\n            })\r\n            this.setState({\r\n                schools: allSchools\r\n            })\r\n        })\r\n    }\r\n    schoolSelect(e){\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo;\r\n        let allGroups=[];\r\n        schoolRef.on('value', snap => {\r\n            dbinfo = snap.val();\r\n            dbinfo.map(item => {\r\n                if(item.school === e.target.value){\r\n                    item.groups.map(item => {\r\n                        allGroups.push(item.name)\r\n                    })\r\n                } \r\n            })\r\n        })\r\n        this.setState({\r\n            school: e.target.value,\r\n            groups: allGroups,\r\n            schoolChuse: true\r\n        })\r\n    }\r\n    groupSelect(e){\r\n        this.setState({\r\n            group: e.target.value\r\n        })\r\n    }\r\n    onPhoneChange(e) {\r\n        this.setState({\r\n            phone: e.target.value\r\n        })\r\n    }\r\n    onPasswordChange(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo;\r\n        let userInfo={};\r\n        schoolRef.on('value', snap => {\r\n            dbinfo = snap.val();\r\n            dbinfo.map(item=>{\r\n                if(item.school === this.state.school){\r\n                    item.groups.map(item=>{\r\n                        if(item.name === this.state.group){\r\n                            item.pupils.map(item=>{\r\n                                if(this.state.phone === item.phone && this.state.password === item.password){\r\n                                    //console.log('loged', item.name);\r\n                                    userInfo.name = item.name;\r\n                                    userInfo.school = this.state.school;\r\n                                    userInfo.group = this.state.group;\r\n                                    userInfo.phone = item.phone;\r\n                                    userInfo.password = item.password;\r\n                                    //console.log(userInfo);\r\n                                    localStorage.setItem('studyLinkuser', JSON.stringify(userInfo));\r\n                                    window.location.hash = '#/home'\r\n                                }else{\r\n                                    this.setState({\r\n                                        login: false\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        \r\n    }\r\n    render() {     \r\n        let faillogin, schoolChuse;\r\n        if(this.state.login === false){\r\n            faillogin = <Alert variant='danger'> Wrong phone number or passwor</Alert> \r\n            setTimeout( ()=>{\r\n                faillogin = <div></div>\r\n                this.setState({login: null})\r\n            }, 3000);\r\n        }\r\n        if(this.state.login === true){\r\n            faillogin = <div></div>\r\n        }\r\n        if(this.state.schoolChuse){\r\n            schoolChuse = <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                <Form.Label>Назва групи</Form.Label>\r\n                <Form.Control as=\"select\" onChange={this.groupSelect}>\r\n                    <option>Моя група</option>\r\n                    {   \r\n                        this.state.groups.map(item => \r\n                            <option key={item}>{item}</option>\r\n                        ) \r\n                    }\r\n                </Form.Control>\r\n            </Form.Group>\r\n        }\r\n        return ( \r\n            <div className=\"container w-50\"> \r\n            <br />\r\n                <Form onSubmit={this.onSubmit}>\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Назва закладу</Form.Label>\r\n                        <Form.Control as=\"select\" onChange={this.schoolSelect}>\r\n                                <option>Мій заклад</option>\r\n                            {\r\n                                this.state.schools.map(item => \r\n                                    <option key={item}>{item}</option>\r\n                                )\r\n                            }\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                        \r\n                    {schoolChuse}\r\n\r\n                    {faillogin}\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control \r\n                            name=\"name\" \r\n                            type=\"text\" \r\n                            placeholder=\"Enter phone\" \r\n                            onChange={this.onPhoneChange}\r\n                            value={this.state.phone} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={this.onPasswordChange}\r\n                            value={this.state.password} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Sign in\r\n                    </Button>\r\n                </Form>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, {Component} from \"react\";\r\nimport program from '../images/program.jpg';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Landing extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: null\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n       \r\n    }\r\n    render() {\r\n        return ( \r\n           <div>\r\n               <img src={program}/>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nclass Temes extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            temes: null,\r\n            username: null,\r\n            temesOpen: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const temesRef = rootRef.child('temes');\r\n        const schoolRef = rootRef.child('schools');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        console.log(user)\r\n        let dbinfo, dbinfoSchools;\r\n        \r\n        schoolRef.on('value', snap =>{\r\n            dbinfoSchools = snap.val();\r\n            //console.log(dbinfoSchools);\r\n            dbinfoSchools.map(item=>{\r\n                if(item.school === user.school){\r\n                    //console.log(item.school)\r\n                    item.groups.map(item=>{\r\n                        if(item.name === user.group){\r\n                            //console.log(item.name, item.temes_pass, item.temes_open)\r\n                            this.setState({\r\n                                temesOpen: item.temes_open\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        temesRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            console.log(dbinfo.length, dbinfo)\r\n            while(dbinfo.length>this.state.temesOpen){\r\n                dbinfo.pop();\r\n            }\r\n            console.log(dbinfo.length, dbinfo)\r\n\r\n            this.setState({\r\n                temes: dbinfo,\r\n                username: user.name,\r\n                loaded: true\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        if(!this.state.loaded){\r\n            return <div>Loading...</div>\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h1>Теми відкриті для {this.state.username}</h1>\r\n                    <Accordion defaultActiveKey=\"0\" align='left'>\r\n                    {\r\n                        this.state.temes.map(item=>(\r\n                            <Card key={item.tema}>\r\n                                <Accordion.Toggle as={Card.Header} eventKey={item.tema}>\r\n                                    {item.tema}\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey={item.tema}>\r\n                                <Card.Body>\r\n                                    {(item.task[0] !== \"\") ? <div>\r\n                                        <h5 align=\"left\">Завдання</h5>\r\n                                        <ol>\r\n                                        {item.task.map(item =>(\r\n                                            <li align='left' key={item}><a href={'https://kosaniakmarianone.github.io/' + item} target='blank'>Завдання</a></li>\r\n                                        ))}\r\n                                        </ol></div>: ''\r\n                                    }\r\n                                    {(item.materials !== \"\") ? <h5 align='left'><a href={item.materials} target='blank'>Матеріали</a></h5> : ''}\r\n                                    {(item.video !== \"\") ? <h5 align='left'><a href={item.video} target='blank'>Відео</a></h5> : ''}\r\n                                    {(item.video === \"\" && item.materials === \"\" && item.task[0] === \"\") ? 'Тема не відкрита, або розглядається лише на занятті': ''}\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        ))\r\n                    }\r\n                     </Accordion>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Temes;","import React, {Component} from 'react';\nimport { HashRouter, Route} from \"react-router-dom\";\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Admin from './components/Admin';\nimport SignIn from './components/SignIn';\nimport Landing from './components/Landing';\nimport Temes from './components/Temes';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <HashRouter basename='/'>\n              <div className=\"App\" align='center'>\n                  <Route path='/' component={Header}/>\n\n                  <Route exact path='/' component={Landing}/>\n\n                  <Route exact path='/landing' component={Landing}/>\n\n                  <Route exact path='/home' component={Home}/>\n\n                  <Route exact path='/temes' component={Temes}/>\n\n                  <Route exact path='/admin' component={Admin}/>\n\n                  <Route path='/SignIn' component={SignIn}/>\n              </div>\n          </HashRouter>\n        );\n    }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDHAQfudekbBrh4WeEyhi9XZ4tPyuU-nHQ\",\n    authDomain: \"studylink-62a6b.firebaseapp.com\",\n    databaseURL: \"https://studylink-62a6b.firebaseio.com\",\n    projectId: \"studylink-62a6b\",\n    storageBucket: \"studylink-62a6b.appspot.com\",\n    messagingSenderId: \"710063505158\",\n    appId: \"1:710063505158:web:4573c8d89733fc2025e887\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}